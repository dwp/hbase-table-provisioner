version: '3'

services:
  hbase-table-provisioner-hdi-inputs:
    image: hbase-table-provisioner:latest
    build: ./
    container_name: hbase-table-provisioner-hdi-inputs
    depends_on:
      - hbase
    # This command is to match what we do in AWS batch
    environment:
      COLLECTIONS_FILENAME_FORMAT_REGEX_PATTERN: '^[\w]+\-[\w]+\/[\w]+\/[\w]+\/\d{4}\-(0?[1-9]|1[012])\-(0?[1-9]|[12][0-9]|3[01])\/[\w-]+\.[\w-]+\.[0-9]+\.json.gz.enc'
      COLLECTIONS_INPUT_BUCKET: input-bucket
      COLLECTIONS_INPUT_BASE_PATH: business-data/mongo
      SPRING_CONFIG_LOCATION: test.properties
    command:
      - "adb/2020-06-23,cdb/2020-04-01"
      - "hdi-inputs"

  hbase-table-provisioner-cdl-inputs:
    image: hbase-table-provisioner:latest
    build: ./
    container_name: hbase-table-provisioner-cdl-inputs
    environment:
      COLLECTIONS_FILENAME_FORMAT_REGEX_PATTERN: '(?:db\.)?([-.\w]+?)\.([-.\w]+)_\d+_\d+_\d+.jsonl.gz$$'
      COLLECTIONS_INPUT_TYPE: 'CDL'
      COLLECTIONS_INPUT_BUCKET: corporate-storage-input
      COLLECTIONS_INPUT_BASE_PATH: corporate_storage/ucfs_main
      SPRING_CONFIG_LOCATION: test.properties
    command:
      - "NOT_SET"
      - "cdl-inputs"

  hbase:
    image: harisekhon/hbase:1.4
    ports:
      - 9090:9090
      - 9095:9095
      - 2181:2181
      - 16201:16201
    container_name: hbase

  htp-integration-test:
    image: htp-integration-test:latest
    container_name: htp-integration-test
    build:
      dockerfile: docker/integration/Dockerfile
      context: .
    command: "gradle --rerun-tasks integration"
    environment:
      CONTAINER_VERSION: "latest"
      ENVIRONMENT: "local-dev"
      APPLICATION: "htp-integration-test"
      COMPONENT: "jar-file"
      APP_VERSION: "integration"
      LOG_LEVEL: "INFO"
      CORRELATION_ID: "integration-test"
      HBASE_CHUNK_SIZE: "1"
      HBASE_ZOOKEEPER_PARENT: "/hbase"
      HBASE_ZOOKEEPER_PORT: "2181"
      HBASE_ZOOKEEPER_QUORUM: "hbase"
      HBASE_RPC_READ_TIMEOUT_MILLISECONDS: "1200"
      HBASE_CLIENT_SCANNER_TIMEOUT_PERIOD_MILLISECONDS: "12000"
      HBASE_CLIENT_OPERATION_TIMEOUT_MILLISECONDS: "1200"
      HBASE_PAUSE_MILLISECONDS: "50"
      HBASE_RETRIES: "3"
      HBASE_COLUMN_FAMILY: "cf"
      HBASE_COLUMN_QUALIFIER: "record"
      HBASE_REGION_REPLICATION_COUNT: "3"
      HBASE_REGION_TARGET_SIZE: "12"
      HBASE_REGION_SERVER_COUNT: "8"
      HBASE_COALESCE_COLLECTION_REGEX_PATTERN: '(?<database>[\w-]+)\.(?<collection>[\w-]+)'
      COLLECTIONS_INPUT_BUCKET: "input-bucket"
      COLLECTIONS_INPUT_BASE_PATH: "business-data/mongo"
      # This is not the main container, it is a gradle one so this must be a env var here
      COLLECTIONS_PREFIX_PATHS: "adb/2020-06-23,cdb/2020-04-01"
      COLLECTIONS_FILENAME_FORMAT_REGEX_PATTERN: '^[\w]+\-[\w]+\/[\w]+\/[\w]+\/\d{4}\-(0?[1-9]|1[012])\-(0?[1-9]|[12][0-9]|3[01])\/[\w-]+\.[\w-]+\.[0-9]+\.json.gz.enc'
      COLLECTIONS_NAME_REGEX_PATTERN: '([-\w]+\.[-.\w]+)\.[0-9]+\.json\.gz\.enc'
      S3_CLIENT_REGION: "eu-west-2"
      S3_MAX_ATTEMPTS: "5"
      S3_INITIAL_BACKOFF_MILLIS: "1000"
      S3_BACKOFF_MULTIPLIER: "2"
      SPRING_PROFILES_ACTIVE: "LOCAL_S3"

  aws-s3:
    image: localstack/localstack
    ports:
      - '4563-4584:4563-4584'
      - '8055:8080'
    environment:
      - SERVICES=s3
      - DEFAULT_REGION=eu-west-2
      - DEBUG=1
      - DATA_DIR=/data/s3
      - START_WEB=0
    container_name: aws-s3

  s3-init:
    image: s3-init
    build:
      context: docker/s3-init
    container_name: s3-init
    depends_on:
      - aws-s3
    environment:
      - S3_SERVICE_ENDPOINT=http://aws-s3:4566
      - AWS_REGION=eu-west-2
      - AWS_ACCESS_KEY_ID=aws-access-key
      - AWS_SECRET_ACCESS_KEY=aws-secret-access-key
      - S3_BUCKET=input-bucket
      - S3_PREFIX=business-data/mongo
      - S3_UCDUMP_PREFIXES="adb/2020-06-23,cdb/2020-04-01"
      - S3_MANIFEST_BUCKET=manifestbucket
      - CREATE_PAGINATED_DATA=${CREATE_PAGINATED_DATA:-no}

volumes:
  shared-volume:
